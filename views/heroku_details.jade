extends layout

block header

  script
    function removeConfig(key) {
      if (confirm('Remove this Config Var?')) {
        $.ajax({
          url: '/heroku/app/#{data.app.name}/config-var/add',
          type: 'post',
          data: { key: key, value: 'null' },
          success: function(res) {
            if (res.err) {
              // $('.message').html('Invalid Config Var.');
              // TODO: Popup an alert message.
            } else {
              // $('.message').html('Config Var Added. Add Another?');
              $('.row-'+key).remove();  
            }
          }
        });
      }
    }

    function addConfig() {
      var email = $('#addUser_Email').val();

      $.ajax({
        url: '/heroku/app/#{data.app.name}/config-var/add',
        type: 'post',
        data: { key: $('#addConfig_Key').val(), value: $('#addConfig_Value').val() },
        success: function(res) {
          if (res.err) {
            $('.message').html('Invalid Config Var.');
          } else {
            $('#addConfig_Key').val('');
            $('#addConfig_Value').val('');
            $('.message').html('Config Var Added. Add Another?')   
          }
        }
      });

    }

    function addUser() {
      var email = $('#addUser_Email').val();
      // Add Validation for the email address.

      $.ajax({
        url: '/heroku/app/#{data.app.name}/collaborators/add',
        type: 'post',
        data: { email: email },
        success: function(res) {
          if (res.err) {
            $('.message').html('Invalid Email Address.');
          } else {
            $('#addUser_Email').val('');
            $('.message').html('Collaborator Added. Add Another?')   
          }
        }
      });

    }

block content

    .row-fluid
      .span7

        h3 #{data.app.name}

    .row-fluid
      .span7

        table.table-striped.table.table-hover
         tr
           td Name
           td=data.app.name
         tr
           td Owner
           td=data.app.owner.email
         tr
         tr
           td Updated
           td=data.app.updated_at
         tr
           td Stack
           td=data.app.stack
         tr
           td Git
           td=data.app.git_url
         tr
           td App URL
           td=data.app.web_url
         tr
           td Status
           td=data.app.status
         tr
           td Build Pack
           td=data.app.buildpack_provided_description

      .span4

        h4 Contributors

        table.table-striped.table.table-hover
         tr
          th(width="20%")
           | Email
          th(width="20%")

          - if (!data || data.length == 0) 
             tr
              td(colspan="5")
               | No processes started.
          - else
            each rec in data.users
             tr
              td=rec.user.email
              td
               a(class="btn btn-mini", href="/heroku/app/#{data.app.name}/collaborator/#{rec.id}/delete") Remove
          tr
            td(colspan="2")

                a(href="#addCollaborator", role="button", class="btn btn-mini btn-primary", data-toggle="modal") Add a User
 
        h4 App Addons

        table.table-striped.table.table-hover
         tr
          th
           | Plan Name

          - if (!data || data.length == 0) 
             tr
              td(colspan="5")
               | No processes started.
          - else
            each addon in data.addons
             tr
              td=addon.plan.name

    .row-fluid
      .span11
        
        h4 Config Vars
        p The following are Config Vars for this application. Use the add to either create a new, or to overwrite 
          and existing key value pair. These values are accessible from the Heroku CLI using the 'heroku config'
          command.

        table.table-striped.table.table-hover
         tr
          th(width="30%")
           | Name
          th(width="60%")
           | Value
          th(width="10%")
          - if (!data || data.length == 0) 
             tr
              td(colspan="5")
               | No processes started.
          - else
            each val, i in data.variables
             tr(class="row-#{i}")
              td=i
              td=val
              td
                button(class="btn btn-mini", onclick="removeConfig('#{i}');") Remove

          tr
            td(colspan="3")
              button(href="#addConfig", role="button", class="btn btn-mini btn-primary", data-toggle="modal") Add Config Var

        a(class="btn btn-warning", href="/heroku/apps") << Return to App List

        div(id="addCollaborator", class="modal hide fade", tabindex="-1", role="dialog", aria-labelledby="myModalLabel", aria-hidden="true")
          div(class="modal-header")
            button(type="button", class="close", data-dismiss="modal", aria-hidden="true") ×
            h3(id="myModalLabel") Add a Collaborator?

          div(class="modal-body")
            p Enter User Email Address:
              form(id="addUserForm")
                input(type="text", id="addUser_Email", name="email")
            p(class="message") 

          div(class="modal-footer")
            button(class="btn", data-dismiss="modal", aria-hidden="true") Close
            button(class="btn btn-primary", onclick="addUser();") Continue

        div(id="addConfig", class="modal hide fade", tabindex="-1", role="dialog", aria-labelledby="myModalLabel", aria-hidden="true")
          div(class="modal-header")
            button(type="button", class="close", data-dismiss="modal", aria-hidden="true") ×
            h3(id="myModalLabel") Add/Edit Configuration Variable?

          div(class="modal-body")
            p Enter Key and Value:
              form(id="addUserForm")
                input(type="text", id="addConfig_Key", name="key")
                | &nbsp;
                input(type="text", id="addConfig_Value", name="value")
            p(class="message") 

          div(class="modal-footer")
            button(class="btn", data-dismiss="modal", aria-hidden="true") Close
            button(class="btn btn-primary", onclick="addConfig();") Continue